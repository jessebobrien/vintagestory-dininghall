name: Build DiningHall Mod

on:
  push:
    branches: [ master ]
    tags: [ 'v*' ]
  pull_request:
    branches: [ master ]

jobs:
  build-windows:
    runs-on: windows-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '6.0.x'

    - name: Restore & Build (Release) using STUBS
      run: dotnet build DiningHallMod.csproj -c Release /p:DefineConstants=STUBS

    - name: Upload DLL
      uses: actions/upload-artifact@v4
      with:
        name: DiningHallMod-dll
        path: bin/Release/net472/DiningHallMod.dll

    - name: Package mod (PowerShell)
      shell: pwsh
      run: |
        .\package.ps1

    - name: Upload packaged mod zip
      uses: actions/upload-artifact@v4
      with:
        name: DiningHall-zip
        path: dist/*.zip

  release:
    if: startsWith(github.ref, 'refs/tags/')
    runs-on: windows-latest
    needs: build-windows
    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '6.0.x'

    - name: Package mod (PowerShell)
      shell: pwsh
      run: .\package.ps1

    - name: Create GitHub Release
      id: create_release
      uses: actions/create-release@v1
      with:
        tag_name: ${{ github.ref_name }}
        release_name: ${{ github.ref_name }}
        body: "Automated release for ${{ github.ref_name }}"
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Upload Release Asset (zip)
      uses: actions/upload-release-asset@v1
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: dist/*.zip
        asset_name: DiningHall_${{ github.ref_name }}.zip
        asset_content_type: application/zip
